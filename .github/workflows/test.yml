name: Run Autumn Tests

on:
  pull_request:
  workflow_dispatch:

env:
  DATABASE_URL: ${{ secrets.SUPABASE_URL }}
  UNIT_TEST_AUTUMN_SECRET_KEY: ${{ secrets.AUTUMN_KEY }}
  REDIS_URL: redis://localhost:6379
  ENCRYPTION_IV: ${{ secrets.ENCRYPTION_IV }}
  ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}
  TESTS_ORG: ${{ secrets.TESTS_ORG }}
  TESTS_ORG_ID: ${{ secrets.TESTS_ORG_ID }}
  LOCALTUNNEL_RESERVED_KEY: ${{ secrets.LOCALTUNNEL_RESERVED_KEY }}
  STRIPE_WEBHOOK_URL: ${{ secrets.STRIPE_WEBHOOK_URL }}
  BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
  HYPERBROWSER_API_KEY: ${{ secrets.HYPERBROWSER_API_KEY }}
  STRIPE_TEST_KEY: ${{ secrets.STRIPE_TEST_KEY }}

jobs:
  test:
    # Prevent parallel PR test runs to reduce Stripe API rate-limit issues
    concurrency:
      group: autumn-tests
      cancel-in-progress: false
    runs-on: ubuntu-latest
    timeout-minutes: 180
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2

      - name: Set up bun
        uses: oven-sh/setup-bun@v2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: bun install

      - name: Setup CI env files
        run: bun run setupci

      - name: Build shared
        run: |
          cd shared
          bun run build

      - name: Start stack
        run: sudo docker compose -f docker-compose.ci.yml up --detach

      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to start..."
          timeout 180s bash -c 'until curl -s --fail http://localhost:8080; do echo "Waiting..."; sleep 3; done'
          echo "Server is up!"

      - name: Run G1 tests (with setup)
        run: |
          cd server
          chmod +x ./shell/g1.sh
          ./shell/g1.sh setup

      - name: Run G2 tests
        run: |
          cd server
          chmod +x ./shell/g2.sh
          ./shell/g2.sh

      - name: Run G3 tests
        run: |
          cd server
          chmod +x ./shell/g3.sh
          ./shell/g3.sh

      - name: Run G4 tests
        run: |
          cd server
          chmod +x ./shell/g4.sh
          ./shell/g4.sh

      - name: Run G5 tests
        run: |
          cd server
          chmod +x ./shell/g5.sh
          ./shell/g5.sh

      - name: Docker logs (localtunnel)
        if: always()
        run: sudo docker compose -f docker-compose.ci.yml logs localtunnel

      - name: Stop stack
        if: always()
        run: sudo docker compose -f docker-compose.ci.yml down